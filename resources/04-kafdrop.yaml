kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: events-kafdrop
  labels:
    app: kafdrop
    app.openshift.io/runtime: java
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"StatefulSet","name":"ticketz-kafka"}]'
    app.openshift.io/vcs-uri: 'https://github.com/obsidiandynamics/kafdrop'
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    name: kafdrop
  template:
    metadata:
      name: kafdrop
      labels:
        name: kafdrop
    spec:
      containers:
        - name: kafdrop
          env:
            - name: KAFKA_BROKERCONNECT
              value: "ticketz-kafka-bootstrap.ticketz:9092"
          imagePullPolicy: IfNotPresent
          image: obsidiandynamics/kafdrop
          ports:
            - containerPort: 9000
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              path: /actuator/health
              port: 9000
              scheme: HTTP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            httpGet:
              path: /actuator/health
              port: 9000
              scheme: HTTP
          resources:
            requests:
              cpu: 500m
              memory: 1Gi
  triggers:
    - type: ConfigChange
---
kind: Service
apiVersion: v1
metadata:
  name: kafdrop
  labels:
    app: kafdrop
spec:
  ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    deploymentconfig: events-kafdrop
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  labels:
    app: kafdrop
  name: kafdrop
spec:
  port:
    targetPort: 9000-tcp
  to:
    kind: Service
    name: kafdrop
    weight: 100
